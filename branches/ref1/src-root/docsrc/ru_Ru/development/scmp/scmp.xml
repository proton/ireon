<?xml version="1.0" encoding="windows-1251"?>

<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
  [
    <!ENTITY % global.entities SYSTEM
        "../../../include/global.xml">
    %global.entities;
  ]
>

<!--
  Внимание, если на вашем компьютере есть локальная версия DTD
Docbook, то
  замените строчку
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
  на
    "file:/path_to_dtd/docbookx.dtd"

  (Если вы используете eDE от e-novative, то на строчку
    "file:/c:/docbook/dtd/docbookx.dtd")
-->


<article lang="ru">

  <articleinfo>

   <title>План управления конфигурациями</title>
    <authorgroup>
      <author>
        <othername>zak</othername>
      </author>
    </authorgroup>

    <releaseinfo>Версия 0.1.4</releaseinfo>
    <revhistory>
      <revision>
        <revnumber>0.1</revnumber>
        <date>20 ноября 2004</date>
        <revremark>создание начальной версии</revremark>
      </revision>
      <revision>
        <revnumber>0.1.1</revnumber>
        <date>12 марта 2005</date>
        <revremark>Незначительные изменения, исправление замеченных
        опечаток.</revremark>
      </revision>
      <revision>
        <revnumber>0.1.2</revnumber>
        <date>1 апреля 2005</date>
        <revremark>Незначительные изменения в схеме нумерации
        ревизий.</revremark>
      </revision>
      <revision>
        <revnumber>0.1.3</revnumber>
        <date>20 мая 2005</date>
        <revremark>
          Правила наименования файлов и папок перенесены в новый
          документ Code conventions.
        </revremark>
      </revision>
      <revision>
        <revnumber>0.1.4</revnumber>
        <date>1 августа 2005</date>
        <revremark>
          Изменены правила нумерации ревизий.
        </revremark>
      </revision>
    </revhistory>


    <abstract>
      <para>
        Данный документ представляет собой План управления
        конфигурациями. Этот план описывает то, как ведется работа с
        различными артефактами проекта, процедуры контроля версий и
        резервного копирования.
      </para>
      <para>
        По всем вопросам обращайтесь на <ulink
        url="http://forum.ireon.org/">форум проекта ireon</ulink>
        или по электронной почте <email>zak[at]ireon.org</email>.
      </para>
    </abstract>

    <keywordset>
      <keyword>ireon</keyword>
      <keyword>scmp</keyword>
    </keywordset>

    <copyright>
      &copyrightinfo;
    </copyright>
    <legalnotice>
      &legalnotice;
    </legalnotice>
  </articleinfo>

<sect1>
  <title>Управление конфигурациями</title>

  <sect2>
    <title>Организация</title>
    <para>
      Специальный человек из команды проекта будет назначен
      ответственным за конфигурации. Подробнее об организации
      проекта и распределение участников проекта по ролям см. <ulink
      url="http://www.ireon.org/docs/html/spmp.html">план управления
      программным проектом</ulink>.
    </para>
  </sect2>

  <sect2>
    <title>Ответственность за управление конфигурациями</title>

    <sect3>
      <title>Ведущий конфигурацию (ответственный за
      конфигурации)</title>
      <para>
        Ведущий конфигурацию отвечает за организацию и управление
        конфигурациями. Ведущий конфигурацию поддерживает данный
        документ, отвечает за установку и сопровождение инструментов
        управления конфигурациями.
      </para>
    </sect3>

    <sect3>
      <title>Лидер проекта</title>
      <para>
        Лидер проекта может выполнять обязанности ведущего
        конфигурацию только в исключительных случаях. Он обязан
        знать все соответствующие средства доступа к документам во
        время ведения проекта. Лидер обязан проверить, что
        архивирование данных ведется в соответствии с политикой
        архивирования.
      </para>
    </sect3>

    <sect3>
      <title>Разработчики</title>
      <para>
        Каждый разработчик обязан выполнять правила управления
        конфигурациями, определенные в этом документе.
      </para>
    </sect3>

  </sect2>

  <sect2>
    <title>Применяемые политики</title>
    <orderedlist numeration="arabic">
      <listitem>
        <para>
          Все текущие и предшествующие элементы конфигурации должны
          сохраняться.
        </para>
      </listitem>
      <listitem>
        <para>
          Полная архивация файлов системы управления конфигурациями
          должна производиться еженедельно.
        </para>
      </listitem>
      <!--
      <listitem>
        <para>Four</para>
      </listitem>-->
    </orderedlist>
  </sect2>

</sect1>

<!--
====================================================================
======================================= -->

<sect1>
  <title>Виды деятельности</title>

  <sect2>
    <title>Определение конфигурации</title>
    <sect3>
      <title>Определение элементов конфигурации</title>
      <para>
        Лидер проекта несет ответственность за определение всех
        элементов конфигурации. Разработчики, желающие определить
        новый элемент конфигурации, должны получить согласие лидера
        проекта по почте или другим способом.
      </para>
    </sect3>
    <sect3>
      <title>Именование элементов конфигурации</title>
      <para>
        Лидер проекта определяет маркировку всех элементов
        конфигурации. Каждый элемент должен располагаться в
        каталоге, обозначающем часть проекта, к которой относится
        элемент конфигурации. Например, документация должна
        располагаться в подкаталоге <emphasis>doc</emphasis>
        проекта. Дополнительно допускается более глубокие вложения,
        которые определяются лидером проекта. Наименования
        директорий и файлов должны подчиняться правилам, описанным
        в документе Code conventions, доступном с сайта проекта.
      </para>
    </sect3>
    <sect3>
      <title>Получение элементов конфигурации</title>
      <para>
        Для модификации элемента конфигурации разработчик должен
        получить этот элемент с помощью команды
        <command>checkout</command> cvs-сервера. Разработчики могут
        забирать элементы конфигурации и работать с ними в любое
        время не зависимо от других разработчиков (и элементов, над
        которыми они работают) при условии, что выполняются все
        директивы, данные в этом документе. <emphasis>Ни при каких
        обстоятельствах разработчики не должны передавать друг другу
        элементы конфигурации в обход системы cvs.</emphasis> Для
        любого разработчика элеметы конфигурации должны быть
        доступны для чтения в любое время.
      </para>
    </sect3>
  </sect2>

  <sect2>
    <title>Контроль конфигурации</title>
    <sect3>
      <title>Работа с артефактами</title>
      <para>
        Работа с артефактами производится строго с разрешения
        ответственного за артефакт. То есть для редактирования кода
        необходимо получить разрешение лидера code team. Для
        изменения документации необходимо получить разрешение
        ответственного за документ. Обычно ответственный за
        артефакты назначает разработчикам зону для работы, исходя из
        потребностей проекта и пожеланий разработчиков. Эта зона
        обычно ограничивается одним файлом/частью файла. Разработчик
        может, выполняя задание руководителя, изменять выделенную
        ему часть проекта в соответствии с документацией и
        обсужденной с руководителем схемой решения проблемы.
      </para>
    </sect3>
    <sect3>
      <title>Ответственные за артефакты</title>
      <para>
        Ответственность за артефакты распределяется следующим
        образом: лидер команды программистов ответственнен за весь
        программный код, ответственность за документацию определена
        в <ulink
        url="http://www.ireon.org/docs/html/spmp.html">спмп</ulink>,
        лидер gfx team ответственнен за весь графический материал
        (рисунки, модели, текстуры и т. д.), за все другие артефакты
        ответственнен лидер проекта.
      </para>
    </sect3>
    <sect3>
      <title>Запрос на изменения</title>
      <para>
        Если разработчику для продолжения работы необходимо сделать
        изменение вне его зоны ответственности, определенной
        ответственным за артефакт (например, установить
        идентификатор параграфа документации для ссылок на этот
        параграф), то ему необходимо сделать запрос на изменение
        ответственному за артефакт с описанием требуемых изменений.
        Ответственный за артефакт оценит необходимость изменения, и,
        в случае принятия запроса, выдаст задание на изменение
        какому-либо разработчику (либо самостоятельно сделает
        изменение).
      </para>
    </sect3>
    <sect3>
      <title>Тривиальные изменения</title>
      <para>
        Вышесказанное не относится к тривиальным изменениям
        (например, исправлению опечаток в текстах документов).
        Нашедший такие ошибки, может не заполнять форму сообщения об
        ошибках, а самостоятельно их исправить, но он обязан
        отправить уведомление ответственному за артефакт с указанием
        всех исправленных ошибок.
      </para>
    </sect3>
    <sect3>
      <title>Внесение изменений</title>
      <para>
        После логического завершения работы над логической частью
        задания необходимо воспользоваться инструментом
        <command>checkin</command> cvs-сервера. Это позволит
        отследить сделанные изменения.
      </para>
      <para>
        Необходимо понимать, что слишком частое использование
        команды checkin не является хорошей практикой &mdash; это не
        альтернатива сохранению файла. Но и слишком редкое ее
        использование тоже вредит задаче управления конфигурациями,
        так как нейтрализирует пользу от самого инструмента контроля
        версий. Поэтому к внесению изменений в репозиторий
        необходимо относиться взвешенно. Хорошей практикой будет
        получение новой рабочей копии перед началом работы, и
        внесение изменение в репозиторий после завершения работы за
        день. Но такая методика должна применяться осторожно.
        Вносите изменения только если закончили работу, не вносите
        еще не прошедший проверок код, так как это может помешать
        работе разработчиков, которые на следующий день получат из
        репозитория код с ошибками. Если сеанс работы заканчивается,
        а стабильного кода не получается, то лучше отложить внесение
        изменений в репозиторий.
      </para>
      <para>
        Также, если вы исправляете опечатки в документации, то лучше
        попытаться сначала обнаружить как можно больше ошибок, а
        потом их исправить все вместе, и, таким образом, произвести
        одно изменение репозитория.
      </para>
    </sect3>
  </sect2>

  <sect2>
    <title>Инструменты</title>
    <para>
      Для контроля конфигураций на выделенной машине установлен cvs-
      сервер.
    </para>
    <para>
      Разработчики могут использовать любые cvs-клиенты для работы с
      сервером через интернет.
    </para>
  </sect2>

</sect1>

<!--
====================================================================
======================================= -->

<sect1>
  <title>Сообщения об ошибках в коде и запросы на добавление
  возможностей</title>
  <para>
    Каждый раз, когда пользователи или кто-то из команды (особенно
    qa team) сталкивается с ошибками в программе, должны быть
    заполнена форма Software Trouble Report, которая будет
    находиться на сайте. После заполнения этой формы STR будут
    попадать в специальную <ulink
    url="http://bugtraq.ireon.org">базу данных</ulink> проекта ireon
    для дальнейшей обработки. На сайте также можно будет просмотреть
    содержимое базы данных ошибок и узнать о состоянии исправления
    уже обнаруженных ошибок.
  </para>
  <para>
    Сообщения об ошибках обрабатываются в следующем порядке. Если
    ошибка относится к текущей версии, то ответственность за
    выполнение следующих пунктов лежит на лидере code team, если
    ошибка была обнаружена в уже выпущенном релизе, то
    ответственность за следующие пункты лежит на ответственном за
    сопровождение релиза. Если ошибка обнаружена и в выпущенном
    релизе, и в текущей версии, то ответственность за следующие
    пункты лежит на ответственном за сопровождение.
  </para>
  <sect2>
    <title>Классификация</title>
    <para>
      Ответственный должен классифицировать ошибку по нескольким
      критериям.
    </para>
    <formalpara>
      <title>Воспроизводимость</title>
      <para>
        Ответственный должен попытаться воспроизвести ошибку.
        Параметр может принимать значения:
        <itemizedlist mark="bullet">
          <listitem><para>Всегда</para></listitem>
          <listitem><para>Иногда</para></listitem>
          <listitem><para>Случайно</para></listitem>
          <listitem><para>Невозможно воспроизвести</para></listitem>
        </itemizedlist>
      </para>
    </formalpara>
    <formalpara>
      <title>Серьезность</title>
      <para>
        Параметр может принимать значения:
        <itemizedlist mark="bullet">
          <listitem><para>block &mdash; мешает дальнейшей
          разработке</para></listitem>
          <listitem><para>crash &mdash; вызывает аварийное
          завершение работы</para></listitem>
          <listitem><para>major &mdash; серьезная
          ошибка</para></listitem>
          <listitem><para>minor &mdash; несущественная
          ошибка</para></listitem>
          <listitem><para>tweak &mdash; нуждается в улучшении
          (графика, форматирование текста)</para></listitem>
          <listitem><para>text &mdash; ошибка в
          текстах</para></listitem>
          <listitem><para>trivial &mdash; тривиальная
          ошибка</para></listitem>
          <listitem><para>feature &mdash; запрос на добавление
          возможностей</para></listitem>
        </itemizedlist>
      </para>
    </formalpara>
    <formalpara>
      <title>Категория</title>
      <para>
        Необходимо выбрать из списка категорию ошибки.
      </para>
    </formalpara>
    <formalpara>
      <title>Приоритет</title>
      <para>
        Приоритет определяет порядок исправления ошибок.
      </para>
    </formalpara>
    <para>
      Если ошибка добавляется членом команды тестирования через
      внутренний интерфейс, они должны самостоятельно заполнить
      вышеуказанные поля, кроме приоритета.
    </para>
    <para>
      После этой стадии ошибке присваивается статус confirmed.
    </para>
  </sect2>
  <sect2>
    <title>Исправление</title>
    <para>
      Далее ответственный должен выбрать разработчика, который будет
      устранять ошибку и обсудить с ним план устранения и сроки,
      после чего присвоить ошибке статус assigned.
    </para>
    <para>
      Ответственный за сопровождение должен самостоятельно устранять
      ошибки.
    </para>
  </sect2>
  <sect2>
    <title>Проверка и закрытие</title>
    <para>
      После устранения ошибки ей присваивается ответственным статус
      resolved, после чего программа должна быть протестирована
      командой контроля качества на то, что ошибка действительно
      была устранена. После этого, ошибке присваивается статус
      closed.
    </para>
  </sect2>
</sect1>

<!--
====================================================================
======================================= -->

<sect1>
  <title>Версии</title>
  <sect2>
    <title>Нумерация версий</title>
    <para>
      Проект ireon будет использовать схему нумерации из трех цифр:
      версии, релиза и ревизии, начиная с 0.1.0.
    </para>
    <para>
      0.1.0 (или просто 0.1) &mdash; первый релиз проекта
    </para>
    <para>
      Релизы для бета-тестирования будут обозначаться буквой b и
      номером бета- релиза.
    </para>
    <para>
      0.2.0b1 &mdash; первый бета-релиз второго релиза
    </para>
    <para>
      Кандидаты в релиз будут обозначаться rc и номером кандидата.
    </para>
    <para>
      1.3.0rc1 &mdash; первый релиз-кандидат третьего релиза первой
      версии
    </para>
    <para>
      Снимок репозитория cvs будет создаваться для каждого
      финального релиза. В cvs будет использоваться представление
      версии с буквой v в начале и _ вместо точек, например,
      v0_2_2b2.
    </para>
    <para>
      Внутренние выпуски проекта будут обозначаться суффиксом int,
      например, 0.2.24-int. Эти релизы предназначены в основном для
      команды разработчиков и будут выпускаться в точках
      стабилизации кода несколько раз в неделю (когда код разных
      разработчиков собирается вместе и проверяется на общую
      работоспособность).
    </para>
    <para>
      Каждый финальный выпуск увеличивает счетчик ревизий на 1.
      При увеличении номера релиза (при начале новой итерации)
      счетчик ревизий сбрасывается в 0. При увеличении номера
      версии (когда вся система подвергается существенному
      изменению) счетчики релизов и ревизий сбрасываются в 0.
    </para>
  </sect2>
  <sect2>
    <title>Релизы</title>
    <sect3>
      <title>Внутренние релизы</title>
      <para>
        Данные релизы предназначены в основном для программистов и
        ядра команды контроля качества. Большое количество релизов
        такого типа будет генерироваться на первой трети каждой
        итерации. Цель данных релизов &mdash; инспектирование
        программистами качества работы.
      </para>
    </sect3>
    <sect3>
      <title>Релизы для бета-тестирования</title>
      <para>
        Данные релизы предназначены для широкомасштабного
        тестирования внутри команды разработчиков (вся команда
        контроля качества и программисты). Эти релизы будут в
        основном выпускаться во второй и третьей третях итераций.
      </para>
      <para>
        На данном этапе возможны потери данных, сбои (или
        отсутствие) функциональности. Функциональность может
        меняться от одного бета-релиза к другому.
      </para>
    </sect3>
    <sect3>
      <title>Кандидаты в релизы</title>
      <para>
        Кандидаты в релиз выпускаются по меньшей мере за 2 недели до
        запланированной даты выпуска финального релиза. Они
        предназначены для широкого круга пользователей, которые
        хотят попробовать новые функциональные возможности и помочь
        в тестировании. Хотя подразумевается, что ошибок в
        кандидатах в релиз должно быть мало, пользователи могут
        столкнуться с еще не найденными/исправленными дефектами.
      </para>
      <para>
        Кандидаты в релиз выпускаются по меньшей мере раз в неделю
        до тех пор, пока не будут исправлены все ошибки, серьезнее
        minor bug.
      </para>
      <para>
        Кандидаты в релиз будут выпускаться на третьей части
        итерации. Их выпуск означает окончание изменений
        функциональности на данной итерации и полный переход к
        тестированию и исправлению ошибок. Как минимум один кандидат
        в релиз должен быть выпущен перед финальным релизом.
      </para>
    </sect3>
    <sect3>
      <title>Финальные релизы</title>
      <para>
        Все релизы с суффиксом s (stable) или без префиксов и
        суффиксов считаются финальными релизами. Эти релизы будут
        сразу по их выходу устанавливаться на официальные сервера
        для игры, и всем пользователям будет предложено перейти на
        них.
      </para>
      <para>
        После выпуска финального релиза возможна дальнейшая
        разработка этого релиза (например, с целью устранения
        оставшихся ошибок), в таком случае будет выпущен релиз с
        новым номером ревизии. (Например, если финальный релиз
        0.3.23, то за ним возможен выпуск релиза 0.3.24-int для
        внуреннего тестирования и потом релиза 0.3.24 как нового
        финального релиза.)
      </para>
    </sect3>
  </sect2>

</sect1>

<!--
====================================================================
======================================= -->

<sect1>
  <title>Сопровождение данного документа</title>
  <para>
    Раз в два месяца (начиная с 1 декабря) должны проводиться
    обзорные совещания по улучшению процесса управления
    конфигурациями. На этих совещаниях должны присутствовать все
    участники проекта. На совещаниях участники проекта должны
    высказать свои предложения по улучшению процесса управления
    конфигурациями.
  </para>
</sect1>

<!--
====================================================================
======================================= -->

<glossary><title>Глоссарий</title>

<glossentry id="ci">
  <glossterm>Артефакт (CI &mdash; configuration item)
  </glossterm>
  <glossdef>
    <para>
      Все, что находится под управлением системы конфигураций, т. е.
      файлы исходного кода, документации, картинки и т. д.
    </para>
  </glossdef>
</glossentry>
<glossentry id="repository">
  <glossterm>Репозиторий
  </glossterm>
  <glossdef>
    <para>
      Хранилище данных на cvs-сервере.
    </para>
  </glossdef>
</glossentry>
<glossentry id="working_copy">
  <glossterm>Рабочая копия
  </glossterm>
  <glossdef>
    <para>
      Данные, которые разработчики получают с cvs-сервера. Является
      копией полного дерева каталогов, сформированной по
      определенному признаку (например, по определенной дате).
    </para>
    <para>
      Разработчики работают со своей рабочей копией, выполняя свои
      задания, а потом отправляют рабочую копию в репозиторий, где
      она сравнивается с текущей и изменения записываются.
    </para>
  </glossdef>
</glossentry>
<glossentry id="configuration">
  <glossterm>Конфигурация
  </glossterm>
  <glossdef>
    <para>
      Набор файлов, объединенный чем-либо. Например, конфигурация
      релиза 0.5 может содержать файл main.cpp версии 1.43, срс
      версии 5.12 и спмп версии 2.7.
    </para>
    <para>
      Задача системы управления конфигурациями состоит в том, чтобы
      помнить эти связи и иметь возможность получить доступ к любому
      релизу и, более точно, к любой версии любого файла.
    </para>
  </glossdef>
</glossentry>

</glossary>


</article>
