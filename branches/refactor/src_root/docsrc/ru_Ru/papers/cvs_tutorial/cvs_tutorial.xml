<?xml version="1.0" encoding="windows-1251"?>

<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
  [
    <!ENTITY % global.entities SYSTEM
        "../../../include/global.xml">
    %global.entities;
  ]
>


<article lang="ru">

  <articleinfo>

   <title>Краткое руководство по использованию cvs</title>
    <authorgroup>
      <author>
        <othername>zak</othername>
      </author>
    </authorgroup>

    <releaseinfo>Версия 0.1.1</releaseinfo>
    <revhistory>
      <revision>
        <revnumber>0.1</revnumber>
        <date>8 декабря 2004</date>
        <revremark>создание начальной версии</revremark>
      </revision>
      <revision>
        <revnumber>0.1.1</revnumber>
        <date>10 марта 2005</date>
        <revremark>добавление информации по SmartCVS 4.0</revremark>
      </revision>
    </revhistory>


    <abstract>
      <para>
        Данный документ предназначен в основном для членов команды
        разработки. Он описывает методы работы с cvs-сервером
        проекта.
      </para>
      <para>
        По всем вопросам обращайтесь на <ulink
        url="http://forum.ireon.org/">форум проекта ireon</ulink>
        или по электронной почте <email>zak[at]ireon.org</email>.
      </para>
    </abstract>

    <keywordset>
      <keyword>ireon</keyword>
      <keyword>cvs</keyword>
      <keyword>tutorial</keyword>
    </keywordset>

    <copyright>
      &copyrightinfo;
    </copyright>
    <legalnotice>
      &legalnotice;
    </legalnotice>
  </articleinfo>

<sect1>
  <title>Введение</title>

  <sect2>
    <title>Зачем нужен cvs-сервер</title>
    <para>
      Наш проект, как написано в  <ulink
      url="http://www.ireon.org/docs/html/scmp.html">плане
      управления конфигурациями</ulink>, будет использовать как
      основу для своей работы сервер cvs. Это необходимо для того,
      чтобы поддерживать одновременную работу многих людей,
      обеспечить более гибкое отслеживание изменений и предоставить
      надежную платформу для работы. В данном документе будут
      описаны основы работы с системой. Более подробную информацию
      можно найти на многочисленных сайтах в интернете, посвященных
      системе, например <ulink
      url="http://www.cvshome.org/">cvshome.org</ulink>.
    </para>
  </sect2>

  <sect2>
    <title>Какие функции выполняет cvs-сервер</title>
    <para>
      Функции, которые выполняет cvs-сервер:
    </para>
    <itemizedlist mark="disc">
      <listitem><para>Позволяет нескольким разработчикам
      работать над одним файлом одновременно</para></listitem>
      <listitem><para>Позволяет в любой момент времени
      получить любую версию любого файла</para></listitem>
      <listitem><para>Сохраняет связи между версиями компонентов
      игры</para></listitem>
      <listitem><para>Позволяет всем желающим получить самую
      последнюю редакцию игры</para></listitem>
    </itemizedlist>
  </sect2>

</sect1>

<!--
====================================================================
======================================= -->

<sect1>
  <title>Необходимое для работы ПО</title>

  <para>
    Наш проект использует стандартный cvs-сервер, поэтому для работы
    с ним вы можете выбрать любое удобное для вас ПО. Это
    руководство будет базироваться на программе SmartCVS только из-
    за удобства использования этой программы.
  </para>
  <formalpara>
    <title>К вопросу о WinCVS</title>
    <para>
      Вероятно, многие из читателей уже пробовали работать с этой
      программой. Также вероятно, что у большой части из вас
      осталось не слишком радужное впечатление от работы с ней. Дело
      в том, что программа WinCVS страдает практически полным
      отсутствием юзабилити и для ее использования необходимо хорошо
      разбираться в системе cvs, что противоречит сути программ для
      Windows. Поэтому для целей этого руководства я выбрал
      программу SmartCVS как удобный бесплатный заменитель, и буду
      объяснять работу на этой программе. Продвинутым пользователям
      ничто не мешает пользоваться WinCVS, предоставляющей большие
      возможности.
    </para>
  </formalpara>
  <sect2>
    <title>Установка и настройка SmartCVS</title>
    <para>
      В этом пункте мы подробно рассмотрим процесс установки и
      настройки клиента для cvs-сервера, программы SmartCVS.
      Предполагается, что вы работаете с операционной системой
      Windows. Существуют альтернативные клиенты для Windows, равно
      как и для других операционных систем. За информацией об
      установке и нестройке этих клинтов обращайтесь на сайты их
      разработчиков.
    </para>
    <sect3>
      <title>Получение SmartCVS</title>
      <para>
        Получить SmartCVS можно с сайта <ulink
        url="http://www.smartcvs.com/">smartcvs.com</ulink>. Для
        работы программы требуется Java Runtime Enviroment (на
        момент написания этих строк версии 1.4.1). Вы можете
        получить установочный пакет SmartCVS со включенной
        необходимой версией JRE на том-же сайте. Если вы уверены,
        что ваша версия JRE подходит, то можете получить
        установочный пакет SmartCVS без включенного JRE (что
        существенно отражается на размере &mdash; JRE занимает около
        9 Мб).
      </para>
      <para>
        На момент написания этих строк последней доступной версией
        SmartCVS была 3.0.6, поэтому описание будет базироваться на
        этой версии.
      </para>
      <formalpara>
        <title>Новая версия SmartCVS</title>
        <para>
          Вышла новая версия SmartCVS 4.0. Все написанное ниже
          справедливо и для нее. Всем рекомендуется перейти на эту
          версию, так как предыдущая версия программы не полностью
          поддерживала русский язык (по крайней мере с JRE 1.4.1 на
          WinXP). В новой версии эта проблема устранена.
        </para>
      </formalpara>
    </sect3>
    <sect3>
      <title>Установка</title>
      <para>
        После того, как вы скачали установочный пакет, его надо
        разархивировать и запустить программу установки. Далее
        необходимо выполить обычный процесс установки, отвечая на
        вопросы мастера.
      </para>
    </sect3>
    <sect3>
      <title>Первый запуск</title>
      <para>
        Запускаем установленную программу. После запуска вам
        предложат ознакомиться с лицензионным соглашением. После
        ознакомления необходимо поставить галочку внизу, означающую,
        что вы принимаете условия соглашения и нажать кнопку Next.
        (Необходимо просмотреть соглашение до конца, прежде чем
        переходить к следующему пункту.) Далее вам предложат выбрать
        версию программы &mdash; выберите Foundation version. Это
        бесплатная версия с ограниченными возможностями,
        достаточными для нормальной работы с нашим cvs-сервером.
        Нажмите на кнопку Finish.
      </para>
    </sect3>
    <sect3>
      <title>Настройка соединения и получение кода</title>
      <para>
        Программа должна загрузить основное окно. Закройте окно
        подсказок, в окне Welcome to SmartCVS нажмите OK. Появится
        окно Check out project. Нажмите кнопку Manage. Появится окно
        Repository Profiles. В нем нажмите кнопку Add. В появившемся
        окне вам необходимо указать следующие параметры:
      </para>
      <itemizedlist mark="disc">
        <listitem>
        <para>Access method &mdash; pserver</para></listitem>
        <listitem><para>User Name &mdash; имя пользователя,
        которое вам выдали</para></listitem>
        <listitem>
        <para>Server Name &mdash; cvs.ireon.org</para></listitem>
        <listitem>
        <para>Repository Path &mdash; /cvsrep</para></listitem>
        <listitem>
        <para>Server Port &mdash; Default</para></listitem>
        <listitem><para>Password &mdash; пароль,
        который вам выдали</para></listitem>
        <listitem><para>Store Password on disc &mdash;
        отметить по желанию</para></listitem>
        <listitem>
        <para>Use CVS Location As Profile Name</para></listitem>
        <listitem>
        <para>Verify Connection When Pressing OK</para></listitem>
      </itemizedlist>
      <para>
        Нажимаем на OK, программа проверит правильность введенных
        настроек и, если все в порядке, закроет окно. Если окно на
        закрывается проверьте еще раз введенные настройки.
      </para>
      <para>
        В появившемся окне Repository Profiles выбираем верхнюю
        строчку и нажимаем на ОК. Окно закроется, опять появится
        окно Check Out Project. В нем нажимаем на Next. В поле
        Modules вбиваем ireon (для версии программы 4.0 есть
        возможность выбора: можно либо найти папку ireon в
        древовидной структуре, либо указать ireon в строке Enter
        path в нижней части окна). Снова нажимаем на Next.  В поле
        Local Directory указываем директорию на вашем компьютере,
        которую вы хотите сделать рабочей (точнее, рабочей будет
        директория ireon, которая будет создана внутри указанной
        директории), оставляем Check Out Into Alternative Path
        неотмеченной и нажимаем Next. На новой странице оставляем
        все как есть и снова нажимаем Next. На следующей странице
        тоже все оставляем как есть и снова нажимаем на Next, на
        следующей странице нажимаем на Finish. <emphasis>Если все
        было сделано правильно, то программа должна соединиться с
        cvs-сервером и получить в указанную вами директорию копию
        исходных данных проекта ireon.</emphasis> Возможно,
        программа перед этим запросит пароль.
      </para>
    </sect3>
  </sect2>

</sect1>

<!--
====================================================================
======================================= -->

<sect1>
  <title>Работа с cvs-сервером</title>
  <sect2>
    <title>Перед началом работы</title>
    <para>
      <emphasis>Внимание! Не экспериментируйте с кодом проекта. Для
      ознакомления с функциональностью системы существует
      специальная площадка. Подробнее см. <xref
      endterm="test_site.title" linkend="test_site"/>.</emphasis>
    </para>

    <para>
      Перед тем, как начать работу, вероятно, будет полезно
      выполнить некоторую настройку программы для более удобного
      использования.
    </para>
    <para>
      По умолчанию программа показывает все файлы, которые находятся
      в выбранной категории или подкатегориях (категории выбираются
      в списке в левой части окна). Это может быть не очень удобно.
      Для изменения этого поведения нажмите Ctrl+Shift+R. Теперь
      будут показываться файлы, находящиеся только в выбранной
      директории.
    </para>
    <para>
      Для того, чтобы по двойному щелчку по названию файла он
      открывался для редактирования в вашем любимом редакторе (а не
      для просмотра средствами SmartCVS) необходимо выполнить
      следующее: открыть окно настроек (Edit->Preferences), в нем в
      списке слева выбрать External Tools, далее добавить правила
      (например, *.txt, *.xml, *.c, *.cpp, *.h, выбрать редактор,
      оставить ${filePath} в последнем поле, после этого нажать
      Insert).
    </para>
    <para>
      Также надо помнить, что при последующих запусках пограммы надо
      будет выбирать из меню Welcome to SmartCVS проект ireon, чтобы
      сразу получить доступ к рабочей директории.
    </para>
    <para>
      Обратите внимание, что вместе с файлами проекта в рабочей
      директории имеется скрытая папка CVS (видна при просмотре
      через проводник). Это рабочие файлы системы. Удалять или
      изменять их не нужно.
    </para>
    <para>
      Система способна объединять самостоятельно изменения,
      сделанные разными разработчиками в разных частях одного файла.
      Она делает это, не запрашивая подтверждения, но при этом она
      сохраняет резервную копию файла с именем
      .#имя_файла.версия_файла. Каждый раз, когда система изменяет
      файлы любым образом без предупреждения, она сохраняет такую
      резервную копию.
    </para>
  </sect2>
  <sect2>
    <title>К вопросу о ревизиях</title>
    <para>
      CVS нумерует ревизии файлов, начиная с 1.1 и прибавляя по
      единице младшей версии каждый раз, когда вы вносите изменения
      в репозиторий. Также cvs поддерживает "ветки", отходящие от
      основного "ствола" разработки, ревизии в них нумеруются
      например так 1.4.2.2. Самое главное, что следует помнить об
      этих номерах &mdash; они не имеют никакого отношения к номерам
      версий, которые мы указываем в файлах, и к номеру версии всего
      продукта целиком.
    </para>
    <para>
      Для иллюстрации этой мысли простой пример: есть документ
      версии 2.3, в системе cvs он обозначен под ревизией 1.45.
      Допустим, кто-то нашел несколько опечаток. Тогда мы исправляем
      файл и вносим изменения в репозиторий, следовательно, номер
      ревизии файла увеличивается на 1 и становится 1.46. Но не
      будем же мы из-за пары опечаток менять номер версии документа?
      Поэтому мы так и оставим его 2.3.
    </para>
    <para>
      Отсюда мораль: номера версий документа мы придумываем сами и
      изменяем их как хотим, а номера ревизий существуют только
      внутри cvs, изменяются сами и больше ни на что не влияют.
    </para>
  </sect2>
  <sect2>
    <title>План сеанса работы</title>
    <para>
      Каждый раз, когда вы работаете с системой вам необходимо
      выполнять следующую последовательность действий:
    </para>
    <itemizedlist mark="disc">
      <listitem>
        <para>
          Получение дерева исходных кодов с сервера (check out).
          Если вы читаете и выполняете это руководство
          последовательно, то этот шаг вы уже должны были выполнить.
        </para>
        <para>
          Обратите внимание, что те файлы, что вы получили у себя на
          компьютере являются просто файлами и никак не связаны с
          информацией на сервере. Вы можете производить с ними любые
          манипуляции (даже удалить) при этом информация на сервере
          не будет изменена пока вы не выполните check in (см.
          ниже).
        </para>
      </listitem>
      <listitem>
        <para>
          Редактирование файлов.
        </para>
        <para>
          Два раза нажав на название нужного файла вы откроете
          редактор, в котором сможете редактировать файл по своему
          усмотрению. Также вы сможете добавить или удалить файлы
          (непосредственно помещая или удаляя их из директории с
          рабочей копией).
        </para>
        <para>
          Сделанные вами изменения будут отображаться в программе
          SmartCVS. Например, если вы изменили файл, то цвет его
          иконки изменится на красный. Если сделанные вами изменения
          не отображаются, то нажмите правой кнопкой мыши на списке
          файлов и выберите Refresh.
        </para>
      </listitem>
      <listitem>
        <para>
          Сохранение изменений в репозитории.
        </para>
        <para>
          Все, что вы сделали до данного момента, никак не
          отображается на информации в репозитории. Если вы уверены,
          что ваши изменения правильные и полные, то вам необходимо
          перенести информацию о них в репозиторий.
        </para>
      </listitem>
    </itemizedlist>
  </sect2>
  <sect2>
    <title>Основные действия</title>
    <para>
      Основные действия, которые вам придестя совершать при работе с
      системой удачно расположены на панели с большими иконками.
      Поэтому я при описании того или иного действия буду указывать
      номер кнопки на панели, за которой закреплено действие (номер
      кнопки считается с учетом неактивных кнопок). Естественно, что
      нажатие на указанную кнопку не единственный способ выполнить
      действие (возможно также использование горячих клавиш и
      пунктов меню).
    </para>
    <sect3>
      <title>Обновление информации &mdash; кнопка 2</title>
      <para>
        Чтобы изменения, сделанные вами в вашей рабочей директории
        отразились в программе SmartCVS (только внутри программы, не
        в репозитории), необходимо нажать кнопку 2 (Refresh).
      </para>
    </sect3>
    <sect3>
      <title>Получение информации &mdash; кнопка 3</title>
      <para>
        Вполне возможно, что за время, прошедшее с последнего
        обновления вами информации в вашей рабочей директории, кто-
        то уже обновил какие-то файлы, или вы хотите получить файлы
        другой версии (предыдущей, например), тогда вам необходимо
        воспользоваться кнопкой 3 (Get changes).
      </para>
      <para>
        Выберите файл или директорию, файлы в которой вы хотите
        обновить и нажмите кнопку 3. Если вы уже редактировали
        обновляемый файл, и если он также был отредактирован кем-то
        другим, то может возникнуть конфликт, в случае, если вы
        редактировали одно и то же место файла (если изменения были
        сделаны в разных частях файла, то система объединит
        изменения самостоятельно, при этом сохранив резервную
        копию). О разрешении конфликтов см. <xref
        endterm="conflict_solving.title"
        linkend="conflict_solving"/>.
      </para>
      <para>
        Если этот документ не был редактирован за время с последнего
        обновления информации в вашей рабочей папке или же он был
        отредактирован не в том месте, где редактировали вы, то этот
        документ при нажатии на кнопку 3 либо вовсе не будет
        изменен, либо, соответственно, будет изменен для отражения
        изменений, сделанных другими разработчиками.
      </para>
      <para>
        Также вы можете выбрать какую версию файла хотите получить,
        указав номер ревизии, тэг или дату ревизии или выбрать самую
        последнюю версию (Main trunk's head).
      </para>
      <para>
        Когда вы начинаете работу после перерыва (скажем, на
        следующий день), вам необходимо обновить свою рабочую
        директорию для отражения в ней изменений, сделанных другими
        разработчиками.
      </para>
    </sect3>
    <sect3>
      <title>Сохранение изменений &mdash; кнопка 4</title>
      <para>
        Чтобы изменения, которые вы сделали могли увидеть все,
        необходимо их внести в репозиторий. Для этого надо
        воспользоваться кнопкой 4 (Commit).
      </para>
      <para>
        Перед внесением изменений полезно знать что вы изменили. Для
        этого нажимаем на кнопку 2. Вносить изменения можно как по
        файлам, так и по директориям. То есть можно выбрать один или
        несколько файлов или директорию. После этого необходимо
        нажать на кнопку 4. SmartCVS отправит на сервер только
        изменившиеся файлы, поэтому с точки зрения скорости работы
        не важно, сохраняли вы целую директорию или отдельный
        изменившийся файл в ней.
      </para>
      <para>
        Вам будет предложено описать сделанные изменения. Не
        игнорируйте этот запрос. Кратко опишите <emphasis>на
        английском языке</emphasis> сделанные изменения.
      </para>
      <para>
        В некоторых случаях может возникнуть конфликт, который вам
        необходимо будет разрешить (см. <xref
        endterm="conflict_solving.title"
        linkend="conflict_solving"/>).
      </para>
    </sect3>
    <sect3>
      <title>Добавление файла &mdash; кнопка 5</title>
      <para>
        Чтобы добавить файл к дереву исходных кодов проекта надо
        поместить нужный файл (создать его) в нужном месте дерева
        каталогов (возможно даже создать там новую поддиректорию).
        Потом необходимо нажать на кнопку 2 для отражения сделанных
        изменений. Далее надо выбрать новый файл и нажать на кнопку
        5 (Add File). Появится окно выбора типа файла. Можно либо
        предоставить программе выбрать тип файла самостоятельно (она
        определяет тип по разрешению), либо указать тип: текстовый
        или двоичный. При добавлении файлов небольшими группами
        лучше выбирать типы вручную. Другие опции, доступные в окне
        следует оставить без изменений. Отвечаем утвердительно на
        запрос на подтверждение правильности выбора типа. Если файл
        находился в новой поддиректории, то она тоже будет
        добавлена.
      </para>
      <para>
        Обратите внимание, что на этом этапе файл будет добавлен
        только в локальную систему контроля версий, но не будет
        отправлен в репозиторий. Для того, чтобы окончательно
        добавить файл необходимо его сохранить в репозитории &mdash;
        см. предыдущий пункт.
      </para>
    </sect3>
    <sect3>
      <title>Удаление файла из репозитория &mdash; кнопка 6</title>
      <para>
        Кнопка 6 предназначена для того, чтобы удалить файл или
        директорию из репозитория. При этом по умолчанию локально
        файл не удаляется. Для того, чтобы удалить файл из
        репозитория необходимо выбрать его и нажать на кнопку 6. Вам
        будет предложено также удалить файл локально. Поставьте
        галочку, если вам нужно локальное удаление. Нажмите ОК и
        файл будет удален из репозитория. При этом история файла не
        удалится из репозитория и будет возможно получить старые
        версии файла (которые существовали до удаления) и старые
        версии кода проекта (частью которых являлся файл).
      </para>
      <para>
        Удаление из репозитория без локального удаления может
        понадобиться при переименовании файла. То есть необходимо
        удалить переименовываемый файл из репозитория, затем в
        рабочей копии переименовать его и уже под новым именем
        занести в репозиторий.
      </para>
    </sect3>
    <sect3>
      <title>Локальное удаление файла &mdash; кнопка 7</title>
      <para>
        Любой файл в рабочей директории можно удалить локально. То
        есть без удаления из репозитория. Отличие от предыдущего
        пункта состоит в том, что при получении дерева исходных
        кодов из репозитория удаленный таким образом файл будет
        восстановлен.
      </para>
    </sect3>
    <sect3>
      <title>Дополнительно: просмотр истории файла &mdash; кнопка 8
      и 9</title>
      <para>
        Кнопки 8 и 9 позволяют сравнить текущую версию файла с
        другой на выбор (построчно) и посмотреть историю изменения
        файла соответственно. Для этого надо выбрать файл и нажать
        на соответствующую кнопку. Эти команды дополняют визуальные
        действия и вам не составит труда разобраться с ними.
      </para>
    </sect3>
  </sect2>
  <sect2 id="conflict_solving">
    <title id="conflict_solving.title">Разрешение конфликтов</title>
    <para>
      Поскольку с системой cvs одновременно могут работать несколько
      пользователей, бывают ситуации, когда в сделанных разными
      пользователями изменениях происходит конфликт. Система
      способна самостоятельно объединять изменения, сделанные
      различными разработчиками, так что конфликт происходит только
      тогда, когда сделанные изменения накладываются друг на друга.
    </para>
    <sect3>
      <title>Когда происходит конфликт</title>
      <para>
        Как уже было сказано выше, конфликт происходит когда разные
        разработчики сделали изменения в одной и той-же части одного
        и того-же файла (то есть изменили или добавили строки в
        одинаковых местах). В таком случае система не способна
        самостоятельно выбрать нужный вариант и предоставляет
        возможность сделать это разработчику.
      </para>
      <para>
        Основной случай возникновения конфликтов &mdash; два
        разработчика получают в свои рабочие каталоги файл, после
        этого оба его редактируют. Первый разработчик отправляет в
        репозиторий свои изменения. Через некоторое время второй
        разработчик также отправляет в репозиторий свои изменения.
        На этом этапе обнаруживается, что оба разработчика меняли
        одну часть файла &mdash; происходит конфликт.
      </para>
      <para>
        Если оба разработчика меняли только различные части файла,
        то система самостоятельно внесет изменения в файл,
        отправляемый вторым разработчиком. То есть она включит в
        него автоматически изменения, сделанные первым разработчиком
        и они не будут потеряны.
      </para>
      <para>
        В общем случае, конфликт происходит тогда, когда разработчик
        делает изменения в той ревизии файла, которая уже не
        является самой последней. То есть возможно работать вообще с
        самой первой ревизией файла и при попытке записать такой
        измененный файл на вершину "ствола" разработки (то есть при
        попытке сделать эту версию файла самой новой из хранящихся)
        в него будут автоматически дописаны все изменения, которые
        были сделаны в файле до этого момента, например, если
        последняя ревизия файла a.txt 1.8, а разработчик взял из
        репозитория ревизию 1.1 и провел ряд изменений, и теперь
        пытается записать свой файл на вершину разработки (а это не
        единственный вариант), то есть присвоить ему номер ревизии
        1.9, то в его файл будут автоматически внесены изменения,
        которые претерпел файл a.txt на пути от ревизии 1.1 до 1.8.
      </para>
    </sect3>
    <sect3>
      <title>Устранение конфликта</title>
      <para>
        Разберем появление и устранение конфликта на примере. Пусть
        есть файл a.txt ревизии 1.3, его содержание:
      </para>
<screen>
1
1
2
2
3
3
</screen>
      <para>
        Разработчики А и В получают этот файл из репозитория. После
        редактирования разработчиком А файл принимает вид:
      </para>
<screen>
1
1
!conflict-A!
2
3
3
!new-A!
</screen>
      <para>
        После чего, разработчик А отправляет этот файл в
        репозиторий, где ему присваивается ревизия 1.4. В это время
        разработчик В редактирует файл по-своему:
      </para>
<screen>
1
1
!conflict-B!
2
3
3
</screen>
      <para>
        При попытке отправить файл в репозиторий программа пишет в
        окне сообщений об ошибке и файл a.txt в рабочей директории
        разработчика В заменяется следующим:
      </para>
<screen>
1
1
&lt;&lt;&lt;&lt;&lt;&lt;&lt; a.txt
!conflict-B!
=======
!conflict-A!
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 1.4
2
3
3
!new-A!
</screen>
      <para>
        Мы видим, что строка !new-A!, которая отсутствовала у
        разработчика В, добавлена автоматически. Конфликтные строки
        представлены в структуре:
      </para>
<screen>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; a.txt
!conflict-B!
=======
!conflict-A!
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 1.4
</screen>
      <para>
        где a.txt &mdash; имя файла, 1.4 &mdash; номер ревизии с
        которой обнаружен конфликт, до строчки из символов равно
        идет строка из файла разработчика В, после строка из файла
        разработчика А (который в репозитории обозначается под
        ревизией 1.4).
      </para>
      <para>
        Разрешение конфликта состоит в следующем: разработчик В
        должен убрать все такие конструкции из файла, сделав выбор
        какую из конфликтующих строк использовать (или вообще
        заменить их третьей). Например, разработчик В может изменить
        a.txt так:
      </para>
<screen>
1
1
!no-conflicts!
2
3
3
!new-A!
</screen>
      <para>
        и после этого внести файл в репозиторий, где он будет
        обозначаться под ревизией 1.5.
      </para>
      <para>
        Конфликты могут возникать не только на одной строчке.
        Система способна выделять целые группы конфликтующих строк.
      </para>
    </sect3>
  </sect2>
  <sect2 id="test_site">
    <title id="test_site.title">Тестовая площадка</title>
    <para>
      По понятным причинам эксперименты над кодом проекта в
      репозитории не приветствуются. Если вы хотите узнать систему
      cvs поближе, то вы можете попрактиковаться в специальном
      модуле &mdash; test.
    </para>
    <para>
      Для начала работы с этим модулем необходимо получить этот
      модуль на вашем компьютере. Для этого в программе SmartCVS
      выберите Project->Check Out. Вы увидите окно, которое уже
      видели при настройке выгрузки кода проекта из cvs-сервера.
      Нажимайте на Next, на следующей странице вписывайте в поле
      Modules слово test, нажимайте на Next и выбирайте директорию
      для тестов. После этого 3 раза подряд нажимайте на Next и
      потом на Finish.
    </para>
    <para>
      Для ознакомления с системой cvs рекомендуется выполнить
      следующие действия (в любом порядке): добавление файла,
      удаление файла, получение файла определенной версии, изменение
      файла. Вы можете производить любые действия над тестовыми
      файлами.
    </para>
  </sect2>

</sect1>

<!--
====================================================================
======================================= -->

<glossary><title>Глоссарий</title>

<glossentry id="ci">
  <glossterm>Артефакт (CI &mdash; configuration item)
  </glossterm>
  <glossdef>
    <para>
      Все, что находится под управлением системы конфигураций, т. е.
      файлы исходного кода, документации, картинки и т. д.
    </para>
  </glossdef>
</glossentry>
<glossentry id="repository">
  <glossterm>Репозиторий
  </glossterm>
  <glossdef>
    <para>
      Хранилище данных на cvs-сервере.
    </para>
  </glossdef>
</glossentry>
<glossentry id="working_copy">
  <glossterm>Рабочая копия
  </glossterm>
  <glossdef>
    <para>
      Данные, которые разработчики получают с cvs-сервера. Является
      копией полного дерева каталогов, сформированной по
      определенному признаку (например, по определенной дате).
    </para>
    <para>
      Разработчики работают со своей рабочей копией, выполняя свои
      задания, а потом отправляют рабочую копию в репозиторий, где
      она сравнивается с текущей и изменения записываются.
    </para>
  </glossdef>
</glossentry>
<glossentry id="configuration">
  <glossterm>Конфигурация
  </glossterm>
  <glossdef>
    <para>
      Набор файлов, объединенный чем-либо. Например, конфигурация
      релиза 0.5 может содержать файл main.cpp версии 1.43, срс
      версии 5.12 и спмп версии 2.7.
    </para>
    <para>
      Задача системы управления конфигурациями состоит в том, чтобы
      помнить эти связи и иметь возможность получить доступ к любому
      релизу и, более точно, к любой версии любого файла.
    </para>
  </glossdef>
</glossentry>
<glossentry id="module">
  <glossterm>Модуль
  </glossterm>
  <glossdef>
    <para>
      Какая-либо часть полного дерева каталогов репозитория. (Проще
      говоря, директория в репозитории и ее поддиректории.)
    </para>
  </glossdef>
</glossentry>

</glossary>


</article>
