import cegui

def cmp_class(x, y):
    if issubclass(x, y) and issubclass(y, x):
        return 0

    if issubclass(x, y):
        return 1

    return -1

# get every class in CEGUI which is a subclass of cegui.EventSet
# not x.endswith("Ptr")
cls = [getattr(cegui, x) for x in dir(cegui) if type(getattr(cegui,x)) == type and issubclass(getattr(cegui,x), cegui.EventSet)]

# sort such that every child class appears after its parent
cls.sort(cmp_class)

events = []

fp = file("cegui_events_2.i", "w")

fp.write("""/* This is a generated file, do not edit it!
 * This file is generated by scripts/genevents.py
 * This file needs to be regenerated every version bump to CEGUI.
 */""")

#
for eventSet in cls:
    curr = [x for x in dir(eventSet) if x.startswith("Event") and x not in events and x != "EventNamespace"]
    if eventSet.__name__ == "Window":
        events += curr

    if len(curr) > 0:
        fp.write("\n\n// Events for: " + eventSet.__name__ + "\n");
        fp.write("%" + 'cegui_string(%s, %s, "%s")' % (eventSet.__name__, 'EventNamespace', str(getattr(eventSet,'EventNamespace'))) + "\n")
        for event in curr:
            fp.write("%" + 'cegui_string(%s, %s, "%s")' % (eventSet.__name__, event, str(getattr(eventSet,event))) + "\n")

fp.close()
